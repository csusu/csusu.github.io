<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[CentOS 6上搭建vsftp、samba和NFS文件服务器]]></title>
      <url>http://csusu.github.io/2016/10/11/Create-vsftpd-server-on-CentOS-6/</url>
      <content type="html"><![CDATA[<p>文件服务器是企业内网环境比不可少的基础设施，Linux系统提供了三个非常好用的软件<code>vsFTP</code>、<code>samba</code>和<code>NFS</code>实现文件共享服务。</p>
<h1 id="VSFTP——Very_Secure_FTP">VSFTP——Very Secure FTP</h1><h2 id="1-_安装软件">1. 安装软件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum -y install vsftpd</span><br></pre></td></tr></table></figure>
<h2 id="2-_配置软件">2. 配置软件</h2><p>软件安装完成后，系统中增加vsftpd服务，该服务的主要配置文件在 <strong>/etc/vsftpd/vsftpd.conf</strong> 。该配置文件是一个示例配置，并且对示例中的每一个选项有注释，但是不完全。</p>
<p>2.1 完全的配置文件选项说明请参考：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ man vsftpd.conf</span><br></pre></td></tr></table></figure></p>
<p>实践中一些个人认为比较重要的配置选项</p>
<pre><code><span class="variable">pam_service_name=</span>/etc/pam.d/vsftpd  <span class="comment">#启用PAM(Pluggable Authentication Module)</span>
<span class="variable">guest_enable=</span>YES                    <span class="comment">#启用虚拟用户功能</span>
<span class="variable">guest_username=</span>ftp                  <span class="comment">#指定虚拟用户的宿主用户</span>
<span class="variable">user_config_dir=</span>/etc/vsftpd/conf    <span class="comment">#设置虚拟用户个人vsftp的服务配置文件路径，每个虚拟用户对应该目录下的一个文件配置该虚拟用户的权限等信息</span>
<span class="variable">userlist_enable=</span>YES
<span class="variable">virtual_use_local_privs=</span>YES         <span class="comment">#虚拟用户功能必须借助使用本地宿主用户权限</span>
<span class="variable">tcp_wrappers=</span>YES
<span class="variable">use_localtime=</span>YES                   <span class="comment">#use local time instead of GMT</span>

<span class="variable">pasv_enable=</span>YES                     <span class="comment">#被动模式</span>
<span class="variable">pasv_min_port=</span><span class="number">22222</span>                 <span class="comment">#被动模式最小数据连接端口</span>
<span class="variable">pasv_max_port=</span><span class="number">33333</span>                 <span class="comment">#被动模式最大数据链接端口</span>
</code></pre><p><code>注意</code>：配合使用<code>PAM</code>可以启用虚拟用户功能，为了让Windows Explorer作为FTP客户端需要启用<code>被动模式</code>，<br>设置相关的端口范围并在后面的<code>防火墙</code>设置相关规则允许访问。如果启用了<code>SELinux</code>，也需要设置相应规则。</p>
<p>2.2 FTP的主动模式和被动模式</p>
<p>2.3 查看和设置服务启动配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ chkconfig --list | grep vsftpd</span><br><span class="line">$ sudo chkconfig --level <span class="number">2345</span> vsftpd</span><br></pre></td></tr></table></figure></p>
<h2 id="3-_配置SELinux规则">3. 配置SELinux规则</h2><p>默认情况下CentOS 开启了SELinux，某些应用的功能会受到限制。<br>3.1 查看SELinux的启用状态：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ getenforce</span><br></pre></td></tr></table></figure></p>
<p>3.2 启用或关闭SELinux<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo setenforce <span class="number">1</span> (或 <span class="number">0</span>)</span><br></pre></td></tr></table></figure></p>
<p>一般情况下不建议关闭SELinux，要开启相关的功能，只需最启用对应的规则即可，如果关闭则会降低系统的安全防护。<br>3.3 ftp涉及的相关规则<br>查看规则：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ getsebool <span class="operator">-a</span> | grep ftp</span><br></pre></td></tr></table></figure></p>
<p>设置规则<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo setsebool -P allow_ftpd_full_access on</span><br><span class="line">$ sudo setsebool -P ftp_home_dir on</span><br><span class="line">$ sudo setsebool -P ftpd_use_passive_mode on</span><br></pre></td></tr></table></figure></p>
<p><code>注意</code>：-P选项表示重启规则不丢失，即Persistent。</p>
<h2 id="4-_配置防火墙">4. 配置防火墙</h2><pre><code>-<span class="keyword">A</span> INPUT -s <span class="number">192.168.0.0</span>/16 -p tcp -m tcp --dport 21 -m state --state NEW,ESTABLISHED -j ACCEPT 
-<span class="keyword">A</span> INPUT -s <span class="number">192.168.0.0</span>/16 -p tcp -m multiport --dports <span class="number">22222:33333</span> -j ACCEPT 
</code></pre><h2 id="5-_编码问题">5. 编码问题</h2><p>由于之前的FTP服务器通过Windows Explorer客户端上传文件或者文件夹采用的是GBK编码，而Linux系统一般使用UTF-8编码，因此可能会存在乱码问题。方案一是给vsftp打补丁让其支持GBK，方案二是将文件和目录编码全部转换为UTF-8编码。实际方案二更好，实现更<code>简单</code>而且<code>编码格式统一</code>，在Linux系统上和samba都不会存在乱码问题。使用<code>convmv</code>工具实现转换：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ convmv <span class="operator">-f</span> GBK -t UTF-<span class="number">8</span> -r dir_name --notest</span><br></pre></td></tr></table></figure></p>
<h1 id="samba">samba</h1><p>samba可以实现windows和Linux之间的文件共享</p>
<h2 id="1-_安装软件-1">1. 安装软件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo yum -y install samba</span><br></pre></td></tr></table></figure>
<h2 id="2-_配置软件-1">2. 配置软件</h2><p>主要配置文件在 <strong>/etc/samba/smb.conf</strong>，添加共享定义：</p>
<pre><code>[ftpfiles]
        <span class="variable">comment =</span> FTP files
        <span class="variable">path =</span> /var/ftp/pub
        <span class="variable">writable =</span> no
        guest <span class="variable">ok =</span> yes
        <span class="variable">browseable =</span> yes
</code></pre><h2 id="3-_配置SELinux规则-1">3. 配置SELinux规则</h2><pre><code>samba_enable_home_dirs<span class="function"> --&gt;</span> <span class="literal">on</span>
samba_export_all_ro<span class="function"> --&gt;</span> <span class="literal">on</span>
</code></pre><h2 id="4-IPTables_防火墙">4.IPTables 防火墙</h2><pre><code>-<span class="keyword">A</span> INPUT -s 10.*.0.0/16 -p tcp -m multiport --dports <span class="number">139,445</span> -j ACCEPT 
-<span class="keyword">A</span> INPUT -s 10.*.0.0/16 -p udp -m multiport --dports <span class="number">137,138</span> -j ACCEPT 
</code></pre><h2 id="5-smb服务启动配置">5.smb服务启动配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chkconfig --level <span class="number">2345</span> smb on</span><br></pre></td></tr></table></figure>
<h1 id="NFS——Network_File_System">NFS——Network File System</h1><p>NFS可以实现Linux、Unix系统之间的文件共享，可以将远程文件系统挂载到本地。</p>
<h2 id="1-安装和配置">1.安装和配置</h2><p>nfs服务配置文件在 <strong>/etc/sysconfig/nfs</strong>,几个重要的配置选项：</p>
<pre><code><span class="preprocessor"># TCP port rpc.lockd should listen on.</span>
<span class="preprocessor">#LOCKD_TCPPORT=32803</span>
LOCKD_TCPPORT=<span class="number">4004</span>
<span class="preprocessor"># UDP port rpc.lockd should listen on.</span>
<span class="preprocessor">#LOCKD_UDPPORT=32769</span>
LOCKD_UDPPORT=<span class="number">4004</span>
<span class="preprocessor"># Optional arguments passed to rpc.mountd. See rpc.mountd(8)</span>
<span class="preprocessor">#RPCMOUNTDOPTS=""</span>
<span class="preprocessor"># Port rpc.mountd should listen on.</span>
<span class="preprocessor">#MOUNTD_PORT=892</span>
MOUNTD_PORT=<span class="number">4002</span>
<span class="preprocessor">#</span>
<span class="preprocessor">#</span>
<span class="preprocessor"># Optional arguments passed to rpc.statd. See rpc.statd(8)</span>
<span class="preprocessor">#STATDARG=""</span>
<span class="preprocessor"># Port rpc.statd should listen on.</span>
<span class="preprocessor">#STATD_PORT=662</span>
STATD_PORT=<span class="number">4003</span>
</code></pre><p><code>注意</code>:与nfs相关的几个服(rpc 111、mountd )端口的设置，需要在防火墙中设置相关规则。</p>
<p>主要<code>共享配置</code>文件在 <strong>/etc/exports</strong>。具体配置格式如下：</p>
<pre><code><span class="regexp">/var/</span>ftp<span class="regexp">/pub/</span>ISOImages  <span class="number">10.</span>*.<span class="number">0.0</span>/<span class="number">16</span>(ro)
<span class="regexp">/var/</span>backup<span class="regexp">/backup/</span>itdb <span class="number">10.</span>*.<span class="number">1.57</span>(rw,all_squash,sync,anonuid=<span class="number">502</span>,anongid=<span class="number">502</span>)
</code></pre><h2 id="2-IPTables防火墙配置">2.IPTables防火墙配置</h2><pre><code>-A INPUT -s <span class="number">10</span>.*.<span class="number">0.0</span>/<span class="number">16</span> -p tcp -m multiport --dports <span class="number">111</span>,<span class="number">2049</span> -j ACCEPT 
-A INPUT -s <span class="number">10</span>.*.<span class="number">0.0</span>/<span class="number">16</span> -p udp -m multiport --dports <span class="number">111</span>,<span class="number">2049</span> -j ACCEPT 
-A INPUT -s <span class="number">10</span>.*.<span class="number">0.0</span>/<span class="number">16</span> -p tcp -m <span class="keyword">state</span> --state NEW -m multiport --dports <span class="number">4002</span>:<span class="number">4004</span> -j ACCEPT 
-A INPUT -s <span class="number">10</span>.*.<span class="number">0.0</span>/<span class="number">16</span> -p udp -m <span class="keyword">state</span> --state NEW -m multiport --dports <span class="number">4002</span>:<span class="number">4004</span> -j ACCEPT 
</code></pre><h1 id="相关工具">相关工具</h1><table>
<thead>
<tr>
<th>名称</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>rsync</td>
<td>remote synchronize 远程同步工具，实现远程文件夹同步备份,服务端使用—daemon选项</td>
</tr>
<tr>
<td>nc</td>
<td>netcat 建立主机之间的TCP连接并传输数据</td>
</tr>
<tr>
<td>convmv</td>
<td>文件和目录名称编码转换工具</td>
</tr>
<tr>
<td>autofs</td>
<td>文件系统自动挂载服务,可结合NFS一起使用</td>
</tr>
</tbody>
</table>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[NTP Client & Server]]></title>
      <url>http://csusu.github.io/2016/06/22/NTP-Client-Server/</url>
      <content type="html"><![CDATA[<p>内部服务器如果没有外部时间源进行同步，会随着时间推移系统时钟将越来越不准确。因此，搭建内部时间服务器并设置客户端与之同步就显得非常重要。本文主要介绍Windows和Linux环境下如何设置客户机与时间服务器同步。</p>
<h1 id="Windows_客户端">Windows 客户端</h1><p>1.确保<code>Windwos Time</code>服务已启动并设置为自动启动。</p>
<p>2.管理员身份运行<code>gpedit.msc</code>组策略管理工具，在：</p>
<blockquote>
<p>计算机配置 &gt; 管理模板 &gt; 系统 &gt; Windows 时间服务 &gt; 时间提供程序 &gt; 启用Windows NTP 客户端 配置为已启用。</p>
<p>计算机配置 &gt; 管理模板 &gt; 系统 &gt; Windows 时间服务 &gt; 时间提供程序 &gt; 配置Windows NTP 客户端 配置 <code>NTPServer</code> 如 10.250.1.X,0x9 <code>Type</code>为NTP</p>
</blockquote>
<p>3.相关注册表位置在：</p>
<blockquote>
<p>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W32Time\TimeProviders\NtpClient</p>
</blockquote>
<p>4.执行(Windows 2012以下版本)：</p>
<pre><code><span class="winutils">net</span> <span class="built_in">time</span> /querysntp
</code></pre><p>检查同步设置。Windows 2012下执行：</p>
<pre><code>w32tm /<span class="keyword">query</span> /peers
</code></pre><p>5.以上配置也可使用如下命令行配置：</p>
<pre><code>w32tm /config /manualpeerlist:[server],<span class="number">0</span>x9
w32tm /config /update 
<span class="winutils">net</span> stop w32time 
<span class="winutils">net</span> <span class="built_in">start</span> w32time
<span class="winutils">net</span> <span class="built_in">time</span> /querysntp
</code></pre><h1 id="Windows_服务端">Windows 服务端</h1><p>1.确保<code>Windwos Time</code>服务已启动并设置为自动启动。</p>
<p>2.打开<code>UDP 123</code>端口的防火墙设置。</p>
<p>3.管理员身份运行<code>gpedit.msc</code>组策略管理工具，在：</p>
<blockquote>
<p>计算机配置 &gt; 管理模板 &gt; 系统 &gt; Windows 时间服务 &gt; 时间提供程序 &gt; 启用Windows NTP服务器 配置为已启用</p>
<p>计算机配置 &gt; 管理模板 &gt; 系统 &gt; Windows 时间服务 &gt; 全局配置设置 配置为已启用并设置<code>AnnounceFlags</code>为<em><code>5</code></em></p>
</blockquote>
<p>4.相关注册表位置在：</p>
<blockquote>
<p>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W32Time\Parameters<br>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W32Time\TimeProviders\NtpServer<br>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\W32Time\TimeProviders\NtpClient 下设置项<code>SpecialPollTimeRemaining</code>值为<code>server</code>,7cef357</p>
</blockquote>
<h1 id="Linux">Linux</h1><p>Linux下时间同步工具有2个：<strong>ntpd</strong>和<strong>ntpdate</strong>。以CentOS为例，一般用ntpdate工具进行一次立即同步，例如：</p>
<pre><code>ntpdate server-ip-<span class="keyword">or</span>-<span class="property">name</span>
</code></pre><p>然后配置并启动启动ntpd服务。ntpd相比ntpdate工具同步时间更加平滑和优雅(不会发送跃变)，在生产环境下尽量使用ntpd进行同步。具体过程如下：</p>
<p>1.在<code>/etc/ntp.conf</code>文件中添加<code>server server-ip</code>。</p>
<p>2.配置ntpd服务自动启动：</p>
<pre><code>sudo chkconfig -level <span class="number">2345</span> ntpd <span class="command"><span class="keyword">on</span> </span>
sudo service ntpd <span class="built_in">start</span>
</code></pre><p>3.查看同步状态：</p>
<pre><code><span class="title">ntpq</span> -p
</code></pre><p>结果：<br><img src="/images/ntpq.png" alt="ntpq"></p>
<p>说明：</p>
<table>
<thead>
<tr>
<th>标志</th>
<th>含义</th>
</tr>
</thead>
<tbody>
<tr>
<td>remote</td>
<td>响应这个请求的NTP服务器的名称</td>
</tr>
<tr>
<td>refid</td>
<td>NTP服务器使用的更高一级服务器的名称</td>
</tr>
<tr>
<td>st</td>
<td>正在响应请求的NTP服务器的级别(Stratum)，NTP 时间同步是分层的</td>
</tr>
<tr>
<td>t</td>
<td>类型 (u: unicast（单播） 或 manycast（选播） 客户端, b: broadcast（广播） 或 multicast（多播） 客户端, l: 本地时钟, s: 对称节点（用于备份）, A: 选播服务器, B: 广播服务器, M: 多播服务器, 参见“Automatic Server Discovery“)</td>
</tr>
<tr>
<td>when</td>
<td>上一次成功请求之后到现在的时间 (默认单位为秒, “h”表示小时，“d”表示天)</td>
</tr>
<tr>
<td>poll</td>
<td>本地和远程服务器多少时间进行一次同步，单位秒，在一开始运行NTP的时候这个poll值会比较小，服务器同步的频率大，可以尽快调整到正确的时间范围，之后poll值会逐渐增大，同步的频率也就会相应减小</td>
</tr>
<tr>
<td>reach</td>
<td>用来测试能否和服务器连接，是一个八进制值，每成功连接一次它的值就会增加</td>
</tr>
<tr>
<td>delay</td>
<td>从本地机发送同步要求到ntp服务器的往返时间</td>
</tr>
<tr>
<td>offset</td>
<td>主机通过NTP时钟同步与所同步时间源的时间偏移量，单位为毫秒，offset越接近于0，主机和ntp服务器的时间越接近</td>
</tr>
<tr>
<td>jitter</td>
<td>统计了在特定个连续的连接数里offset的分布情况。简单地说这个数值的绝对值越小，主机的时间就越精确</td>
</tr>
</tbody>
</table>
<h1 id="虚拟化">虚拟化</h1><p>在虚拟服务器条件下只要设置<code>物理机的时间同步</code>即可，虚拟机会<strong>自动</strong>根据物理主机的时钟进行校正。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SQL Server 找回sa账号密码]]></title>
      <url>http://csusu.github.io/2016/05/12/SQLServer-Retrieve-Account/</url>
      <content type="html"><![CDATA[<p>使用SQL Server时，有时候会遇到sa密码忘记，而且又没有启用Windows身份验证，因此无法进行需要使用数据管理员权限才能完成的操作。</p>
<p>解决办法的思路是，利用Windows管理员账号<code>启动SQL Server的单用户模式</code>，然后以管理员权限运行<code>sqlcmd</code>执行相关的语句启用或者修改sa账号，或者添加其他具有数据库服务器管理员权限的账号。具体步骤如下：</p>
<p>1.<strong>停止SQL SERVER 实例服务。</strong>使用services.msc或者如下语句停止SQL Server实例服务：</p>
<pre><code><span class="blockquote">&gt; net stop MSSQL$实例名</span>
</code></pre><p> 或者</p>
<pre><code><span class="blockquote">&gt; sc stop MSSQL$实例名</span>
</code></pre><p>2.<strong>找到SQL Server服务程序，并且以<code>-m</code>选项启动。</strong>在SQL Server配置管理器中<code>SQL Server服务</code>属性可以看到启动服务实例的全路径和选项(不能复制)，例如以管理员身份运行如下命令：</p>
<pre><code>&gt; "c:<span class="command">\Program</span> Files<span class="command">\Microsoft</span> SQL Server<span class="command">\MSSQL</span>11.SQLEXPRESS<span class="command">\MSSQL</span><span class="command">\Binn</span><span class="command">\sqlservr</span>.exe" -sSQLEXPRESS -m
</code></pre><p>3.<strong>以管理员身份运行sqlcmd</strong>。启动sqlcmd后执行如下命令：</p>
<pre><code>&gt; create login login_name with password=<span class="string">'Your Login Password'</span>
&gt; <span class="keyword">go</span>
&gt; sp_addsrvrolemember <span class="string">'login_name'</span>,<span class="string">'sysadmin'</span>
&gt; <span class="keyword">go</span>
</code></pre><p> 可以新增一个具有管理员权限的账号 或者</p>
<pre><code>&gt; alter login login_name <span class="keyword">with</span> password=<span class="symbol">'Your</span> login password'
&gt; go
</code></pre><p> 修改某个用户账号的密码等操作</p>
<p>4.<strong>停止sqlcmd(<code>步骤3</code>)和SQL Server 维护模式(<code>步骤2</code>)。</strong></p>
<p>5.<strong>重启SQL Server服务。</strong></p>
<pre><code>&gt; <span class="winutils">net</span> <span class="built_in">start</span> MSSQL$实例名
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[SQL Server 单用户模式解决访问权限问题]]></title>
      <url>http://csusu.github.io/2016/01/26/SQLServer-Single-User-Mode/</url>
      <content type="html"><![CDATA[<h2 id="1-问题描述">1.问题描述</h2><p>本机操作系统Windows 2012 Professional, 安装了SQL SERVER 2012 EXPRESS，只开启了Windows身份验证，在非域环境下运行正常。最近因为公司AD域升级，要求所有机器加入Windows Server 2012 R2域环境。本机加入域环境后其他程序均正常，但是运行SQL Server Management Studio(ssms)后，首先是无法连接，更改到正确的<strong>机器名\实例名</strong>并使用对应的<strong>域用户账号</strong>后可以正常连接数据库，但是没有任何管理权限，原先建立的数据库也无法访问，错误提示是：</p>
<blockquote>
<p>用户没有执行此操作的权限或者对象不存在。(与原文可能不一致，大概是这个意思)</p>
</blockquote>
<p>由于没有启用SQL Server身份验证，因此sa账号无法登陆，尝试启用sa账号也报同样的错误。</p>
<h2 id="2-问题分析">2.问题分析</h2><p>通过SSMS的错误提示，分析最可能的原因是SQL Server账号访问权限问题。因为加域后，新的域账号没有对应访问权限。尝试使用本地管理员账号登陆操作系统后再连接数据库，还是同样的问题。根据网上的搜索结果提示可以使用<a href="https://technet.microsoft.com/en-us/sysinternals/bb897553.aspx" target="_blank" rel="external">psexec</a>工具执行下面的指令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; PsExec.exe -i <span class="operator">-s</span> <span class="string">'C:\Program Files (x86)\Microsoft SQL Server\110\Tools\Binn\ManagementStudio\Ssms.exe'</span></span><br></pre></td></tr></table></figure></p>
<p>获得system权限运行ssms，不过仍然无法解决问题。</p>
<h2 id="3-问题解决">3.问题解决</h2><p>显然通过用各种Windows系统账号(如administrator、system等)运行ssms是无法解决问题的。关键还是要能够启用数据库的<strong>sa账号</strong>。因此考虑使用SQL Server的维护模式来启用sa账号。</p>
<ul>
<li><p>Step 1 关闭<em>SQL SERVER (EXPRESS)</em>服务。管理员命令行下执行下列命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; NET STOP MSSQL<span class="variable">$SQLEXPRESS</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Step 2 以单用户模式启动<em>SQL SERVER (EXPRESS)</em>服务：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; NET START MSSQL<span class="variable">$SQLEXPRESS</span> /M</span><br></pre></td></tr></table></figure>
</li>
<li><p>Step 3 管理员身份运行ssms工具，并新建查询。注意此时是单用户模式，不能同时新建查询和连接服务器。</p>
</li>
<li><p>Step 4 启用sa账号：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; alter login sa enabled</span><br></pre></td></tr></table></figure>
</li>
<li><p>Step 5 以多用户模式重启SQL Server服务</p>
<pre><code class="bash">&gt; NET STOP MSSQL<span class="variable">$SQLEXPRESS</span>
&gt; NET START MSSQL<span class="variable">$SQLEXPRESS</span>
</code></pre>
</li>
</ul>
<p>此时已经实现了sa账号的启用，但是却不能用sa账号登陆，因为服务器还没有设置为<em>Windows和SQLServer混合登陆模式</em>，修改注册表</p>
<pre><code class="bash">HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SQL Server\MSSQL11.SQLEXPRESS\MSSQLServer
</code></pre>
<p>路径下的LoginMode值从1改为2。然后重启SQL Server服务，使用sa账号登陆后将当前域账号设置为sysadmin。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Start Blogging]]></title>
      <url>http://csusu.github.io/2015/06/01/first-blog/</url>
      <content type="html"><![CDATA[<p>上周在github上注册了账号并开启了博客<br>今天终于完成了在本地的配置，主要问题在于<em>hexo</em>的使用<br>尽量使用<a href="http://hexo.io/zh-cn/docs/" target="_blank" rel="external"><strong>官方文档</strong></a>吧， 网上搜索的东西总是或多或少的存在问题<br>确定使用<em>freemind</em>的主题，基于bootstrap效果<strong>简单而且优雅</strong>，非常好</p>
<p>Now,开始我的github博客之旅…</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://csusu.github.io/2015/01/01/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
</search>
